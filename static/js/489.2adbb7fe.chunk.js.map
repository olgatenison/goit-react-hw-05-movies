{"version":3,"file":"static/js/489.2adbb7fe.chunk.js","mappings":"2LAIMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAGhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qFAMhBG,GAASL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2FA+B3B,IAvBkB,SAAHM,GAAoB,IAAdC,EAAMD,EAANC,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACb,EAAI,CAAAc,SACFJ,EAAOK,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAACT,EAAI,CAAAU,UACHD,EAAAA,EAAAA,KAACP,EAAM,CACLW,GAAE,WAAAC,OAAaF,EAAMG,IACrBC,MAAO,CAAEC,KAAMV,GAAWG,SAEzBE,EAAMM,SALAN,EAAMG,GAOV,KAIf,C,uJCnCaI,EAAOtB,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8OAclBqB,EAAUvB,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sQAcvBsB,EAAaxB,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0FAQvBuB,EAAYzB,EAAAA,GAAAA,MAAY0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iQ,kBCErC,EA/BkB,SAAHM,GAAsB,IAAhBmB,EAAQnB,EAARmB,SAOnB,OACEf,EAAAA,EAAAA,KAAA,OAAAC,UACEe,EAAAA,EAAAA,MAACN,EAAI,CAACK,SARW,SAAAE,GACnBA,EAAMC,iBACNH,EAASE,EAAME,OAAOC,MAAMC,OAC5BJ,EAAME,OAAOG,OACf,EAIiCrB,SAAA,EAC3BD,EAAAA,EAAAA,KAACa,EAAS,CACRU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,KAAK,WAEP3B,EAAAA,EAAAA,KAACW,EAAO,CAACY,KAAK,SAAQtB,UACpBD,EAAAA,EAAAA,KAACY,EAAU,CAAAX,UACTD,EAAAA,EAAAA,KAAC4B,EAAAA,IAAQ,YAMrB,E,QCEA,EA7BmB,WAAO,IAADC,EACvBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCjC,EAAMmC,EAAA,GAAEE,EAASF,EAAA,GAClBlC,GAAWC,EAAAA,EAAAA,MACXoC,GAAaC,EAAAA,EAAAA,MACnBC,GAAkCN,EAAAA,EAAAA,WAAS,GAAMO,GAAAL,EAAAA,EAAAA,GAAAI,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBlB,EAAyD,QAApDS,EAAG,IAAIY,gBAAgB3C,EAAS4C,QAAQC,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GAgBnE,OATAe,EAAAA,EAAAA,YAAU,WACHxB,IACLoB,GAAa,IACbK,EAAAA,EAAAA,IAAiBzB,GAAO0B,MAAK,SAAAC,GAC3Bb,EAAUa,EAAKC,SACfR,GAAa,EACf,IACF,GAAG,CAACpB,KAGFJ,EAAAA,EAAAA,MAACiC,EAAAA,EAAS,CAAAhD,SAAA,EACRD,EAAAA,EAAAA,KAACkD,EAAS,CAACnC,SAfM,SAAAoC,GACnBhB,GAAUiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAItD,GAAQ,IAAE4C,OAAO,SAADrC,OAAW8C,KAC7C,IAcKZ,GAAYvC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAAiBD,EAAAA,EAAAA,KAACqD,EAAAA,EAAS,CAACxD,OAAQA,MAG1D,C","sources":["components/MovieList.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searshbar.js","pages/MoviesPage.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nconst List = styled.ol`\n  margin-bottom: 10px;\n`;\nconst Item = styled.li`\n  margin-bottom: 10px;\n   &:not(:last-child) {\n  margin-bottom: 5px;\n}\n`;\nconst LinkTo = styled(Link)`\n  font-size: 18px;\n  color: black;\n  &:visited {\n    color: lightgreen;\n  }\n`;\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id} >\n          <LinkTo\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </LinkTo>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;","import styled from \"styled-components\";\n\n\nexport const Form = styled.form`\n   display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: white;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 0.5px solid black;\n  &:hover {\n      border-color: black;\n  }\n`;\n\nexport const FormBtn = styled.button`\n   display: inline-block;\n  width: 80px;\n  height: 50px;\n  border: 0;\n  cursor: pointer;\n  background-color: green;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n  background-color: lightgreen;\n};\n`;\n\nexport const SearchIcon = styled.div`\n   width: 2.3em;\n  height: 1.3em;\n  color: #fff;\n  display: inline-block;\n\n`;\n\nexport const FormInput = styled.input`\n   display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n \n  &::placeholder {\n  font: inherit;\n  font-size: 24px;\n  color: lightgreen;\n}\n`;","import PropTypes from 'prop-types';\nimport {\n  Form,\n  FormBtn,\n  SearchIcon,\n  FormInput,\n} from \"./Searchbar.styled\"\n\nimport { FaSearch } from 'react-icons/fa';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(event.target.query.value);\n    event.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n          name=\"query\"\n        />\n        <FormBtn type=\"submit\" >\n          <SearchIcon>\n            <FaSearch />\n          </SearchIcon>\n        </FormBtn>\n      </Form>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getMoviesByQuery } from '../servises/api';\n\nimport Container from '../components/Container';\nimport Searchbar from '../components/Searchbar/Searshbar';\nimport MovieList from '../components/MovieList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const navigation = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const query = new URLSearchParams(location.search).get('query') ?? '';\n\n  //при сабмите формы поиска\n  const HandleSubmit = request => {\n    navigation({ ...location, search: `query=${request}` });\n  };\n  //при изменении запроса в форме поиска фильмов\n  useEffect(() => {\n    if (!query) return;\n    setIsLoading(true);\n    getMoviesByQuery(query).then(resp => {\n      setMovies(resp.results);\n      setIsLoading(false);\n    });\n  }, [query]);\n\n  return (\n    <Container>\n      <Searchbar onSubmit={HandleSubmit} />\n      {isLoading ? <p>...Loading</p> : <MovieList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkTo","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","to","concat","id","state","from","title","Form","FormBtn","SearchIcon","FormInput","_templateObject4","onSubmit","_jsxs","event","preventDefault","target","query","value","reset","type","autoComplete","autoFocus","placeholder","name","FaSearch","_URLSearchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","navigation","useNavigate","_useState3","_useState4","isLoading","setIsLoading","URLSearchParams","search","get","useEffect","getMoviesByQuery","then","resp","results","Container","Searchbar","request","_objectSpread","MovieList"],"sourceRoot":""}